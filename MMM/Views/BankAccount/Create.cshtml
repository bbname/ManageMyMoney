@model MMM.ViewModels.BankAccountViewModel.BankAccountCreateViewModel

@{
    Layout = "../Shared/_LayoutBankAccountCreate.cshtml";
    ViewBag.Title = "Create";
}

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function() {
        BalanceControl();
    });

    function BalanceControl() {
        var balance = $('#Balance');
        var onlyIntsRegExp = new RegExp('^[0-9]+$');
        balance.change(function () {
            if (onlyIntsRegExp.test(balance.val())) {
                balance.val(balance.val() + ",00");
            }
            else if (balance.val().indexOf('.') !== -1) {
                balance.val(balance.val().replace('.', ','));
            }
            else {
                balance.val();
            }
        });
    }
</script>

<h2>Utwórz konto</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Balance,new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Balance, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedCurrencyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.SelectedCurrencyId, Model.Currencies,new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.SelectedCurrencyId, "", new {@class = "text-danger"})
            </div>
        </div>
        
        @Html.HiddenFor(m => m.UserId)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-success" type="submit"><span class="glyphicon glyphicon-plus"></span> Dodaj</button>
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index")" class="btn btn-primary">
        <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
        Wróć do listy
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
