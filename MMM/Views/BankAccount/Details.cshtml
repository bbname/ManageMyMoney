@using Microsoft.AspNet.Identity
@model MMM.ViewModels.BankAccountViewModel.BankAccountDetailsViewModel

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/load-transactions")
}

@{
    ViewBag.Title = "Details and Transactions";
}
<script type="text/javascript">
    $(document).ready(function () {
        var transactionsDiv = $('#TransactionsList');
        @*LoadTransactions(transactionsDiv, '@Url.Action("GetTransactionsByBankAccountId", "Transaction")', '@Model.Id');*@
        LoadTransactionsFilters(transactionsDiv, '@Url.Action("GetTransactionsByBankAccountIdFilters", "Transaction")', '@Model.Id');
        LoadTransactionsFiltersListener(transactionsDiv, '@Url.Action("GetTransactionsByBankAccountIdFilters", "Transaction")', '@Model.Id');
        DateFromToFilterListener(transactionsDiv, '@Url.Action("GetTransactionsByBankAccountIdFilters", "Transaction")', '@Model.Id');
        ClearDateFromToInputsListener();
        SearchTransactionListener('@Url.Action("AutocompleteSearchTransaction", "Transaction")', '@Url.Action("LoadTransactionBySearchName", "Transaction")', '@Model.Id');
        $bankAccountId = '@Model.Id';

        $(function () {
            $("#FromDate").datetimepicker({
                showAnim: 'slideDown',
                oneLine: true,
                dateFormat: 'dd.mm.yy',
                controlType: 'select',
                showTimepicker: false
            });
        });

        $(function () {
            $("#ToDate").datetimepicker({
                showAnim: 'slideDown',
                oneLine: true,
                dateFormat: 'dd.mm.yy',
                controlType: 'select',
                showTimepicker: false
            });
        });

        $(function() {
            $('#SearchTransactionByName').autocomplete({
            });
        });

    });
</script>

<h2>Konto</h2>

<div>
    <hr />
    <dl class="dl-horizontal h4">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Balance)
        </dt>

        <dd id="BankAccountBalance">
            @Html.DisplayFor(model => model.Balance)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Currency)
        </dt>

        <dd id="BankAccountCurrency">
            @Html.DisplayFor(model => model.Currency)
        </dd>
    </dl>
</div>
<div>
    <a href="@Url.Action("Index")" class="btn btn-primary" style="margin-bottom: 15px;">
        <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
        Wróć do listy
    </a>
    <a href="@Url.Action("Edit", new {id = Model.Id})" class="btn btn-warning" style="margin-bottom: 15px;">
        <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
        Edytuj
    </a>
    <a href="@Url.Action("Delete", new {id = Model.Id})" class="btn btn-danger" style="margin-bottom: 15px;">
        <span class="glyphicon glyphicon-remove"></span>
        Usuń
    </a>
</div>
<hr/>
<h2>Transakcje</h2>
<hr />
<div class="row" id="TransactionListFilters">
    <div class="col-xs-12 col-sm-2 col-md-2 form-group">
        <button type="button" id="CreateTransaction" class="btn btn-success" style="margin-bottom: 15px;" data-toggle="modal" data-target="#ModalCreateTransaction"><span class="glyphicon glyphicon-plus"></span> Dodaj</button>
    </div>
    <div class="col-xs-12 col-sm-2 col-md-2 form-group">
        @Html.Label("Na stronę:")
        @Html.DropDownListFor(m => m.SelectedItemsForPageId, Model.ItemsForPage, new {@class = "form-control"})
        @Html.ValidationMessageFor(model => model.SelectedItemsForPageId, "", new {@class = "text-danger"})
    </div>
    @*<div class="col-xs-12 col-sm-5 col-md-5 form-group">*@
        <div class="col-xs-12 col-sm-3 col-md-3 form-group">
            @Html.DropDownListFor(m => m.SelectedFilterId, Model.FiltersForWeb, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SelectedFilterId, "", new { @class = "text-danger" })
        </div>
    @*<div class="col-sm-offset-5 col-sm-5 col-md-offset-5 col-md-5 col-xs-12">*@
    <div class="col-xs-12 col-sm-5 col-md-5">
        <input id="FromDate" name="FromDate" class="form-control form-group transaction-date-filter" type="text" placeholder="Data od" />
        <input id="ToDate" name="ToDate" class="form-control form-group transaction-date-filter" type="text" placeholder="Data do" />
        <button type="button" class="btn btn-default" id="ClearFromToDateBtn" style="margin-bottom: 15px;">
            <span class="glyphicon glyphicon-calendar"></span> Wyczyść
        </button>
    </div>
    <div id="SearchTransaction" class="col-xs-5 col-sm-4 col-md-3">
        <div class="input-group">
            <input id="SearchTransactionByName" name="SearchTransactionByName" class="form-control" type="text" placeholder="Szukaj po nazwie"/>
            <span class="input-group-btn">
                <button class="btn btn-default" type="button" style="border-left: none;"><span class="glyphicon glyphicon-search"></span></button>
            </span>
        </div>
    </div>
</div>

<hr />
<div class="modal fade" id="ModalCreateTransaction" role="dialog">
    @Scripts.Render("~/bundles/add-transaction")
    <div class="modal-dialog">
        @{ Html.RenderAction("Create", "Transaction", new {bankAccountId = Model.Id, userId = Model.User.Id, accountBalance = Model.Balance, currency = Model.Currency});}
    </div>
</div>
<div class="modal fade" id="ModalDeleteTransaction" role="dialog">
    @Scripts.Render("~/bundles/delete-transaction")
    <div class="modal-dialog">
    </div>
</div>
<div class="modal fade" id="ModalEditTransaction" role="dialog">
    @Scripts.Render("~/bundles/edit-transaction")
    <div class="modal-dialog">     
    </div>
</div>
<div class="row" id="TransactionsList">

</div>

