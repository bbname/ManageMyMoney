@model MMM.ViewModels.BankAccountViewModel.BankAccountDetailsViewModel

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@{
    ViewBag.Title = "Details and Transactions";
}
@*<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js" type="text/javascript"></script>*@
<script type="text/javascript">
    $(document).ready(function () {
        var transactionsDiv = $('#TransactionsList');
        LoadTransactions(transactionsDiv);

        $(function () {
            $("#FromDate").datetimepicker({
                showAnim: 'slideDown',
                oneLine: true,
                dateFormat: 'dd.mm.yy',
                controlType: 'select',
                showTimepicker: false
            });
        });

        $(function () {
            $("#ToDate").datetimepicker({
                showAnim: 'slideDown',
                oneLine: true,
                dateFormat: 'dd.mm.yy',
                controlType: 'select',
                showTimepicker: false
            });
        });

    });

    @*function LoadTransactions(outputDiv) {
        outputDiv.addClass("loader col-xs-offset-6 col-sm-offset-6 col-md-offset-6");
        $.get(
            '@Url.Action("GetTransactionsByBankAccountId", "Transaction", new {@bankAccountId = Model.Id})',
            function (data) {
                outputDiv.removeClass("loader col-xs-offset-6 col-sm-offset-6 col-md-offset-6");
                outputDiv.html(data);
            });
    }*@

    function LoadTransactions(outputDiv) {
        outputDiv.wrap("<div id='TransactionListLoad'></div>");
        var loader = $('#TransactionListLoad');
        outputDiv.css('opacity', '0.0');
        loader.addClass("loader col-xs-offset-6 col-sm-offset-6 col-md-offset-6");
        $.get(
            '@Url.Action("GetTransactionsByBankAccountId", "Transaction", new {@bankAccountId = Model.Id})',
            function (data) {
                loader.removeClass("loader col-xs-offset-6 col-sm-offset-6 col-md-offset-6");
                outputDiv.unwrap();
                outputDiv.css('opacity', '1.0');
                outputDiv.html(data);
            });
    }

</script>

<h2>Konto</h2>

<div>
    <hr />
    <dl class="dl-horizontal h4">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Balance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Balance)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Currency)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Currency)
        </dd>
    </dl>
</div>
<div>
    <a href="@Url.Action("Index")" class="btn btn-primary" style="margin-bottom: 15px;">
        <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
        Wróć do listy
    </a>
    <a href="@Url.Action("Edit", new {id = Model.Id})" class="btn btn-warning" style="margin-bottom: 15px;">
        <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
        Edytuj
    </a>
    <a href="@Url.Action("Delete", new {id = Model.Id})" class="btn btn-danger" style="margin-bottom: 15px;">
        <span class="glyphicon glyphicon-remove"></span>
        Usuń
    </a>
</div>
<hr/>
<h2>Transakcje</h2>
<hr />
<div class="row">
    <div class="col-xs-12 col-sm-2 col-md-2 form-group">
        <button type="button" id="CreateTransaction" class="btn btn-success" style="margin-bottom: 15px;" data-toggle="modal" data-target="#CreateModal"><span class="glyphicon glyphicon-plus"></span> Dodaj</button>
    </div>
    <div class="col-sm-offset-5 col-sm-5 col-md-offset-5 col-md-5 col-xs-12">
        <input id="FromDate" name="FromDate" class="form-control form-group transaction-date-filter" type="text" placeholder="Data od"/>
        <input id="ToDate" name="ToDate" class="form-control form-group transaction-date-filter" type="text" placeholder="Data do"/>
        <button type="button" class="btn btn-info" id="FilterDateBtn" style="margin-bottom: 15px;">
            <span class="glyphicon glyphicon-calendar"></span> Filtruj
        </button>
    </div>
</div>

<hr />
<div class="modal fade" id="CreateModal" role="dialog">
    <div class="modal-dialog">
        @{ Html.RenderAction("Create", "Transaction", new { bankAccountId = Model.Id, userId = Model.User.Id, accountBalance = Model.Balance, currency = Model.Currency });}
    </div>
</div>
<div class="row" id="TransactionsList">

</div>

