@model MMM.Models.ManageLoginsViewModel
@Styles.Render("~/Content/social")
<link href="//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
@using Microsoft.Owin.Security
@*@{
    ViewBag.Title = "Manage your external logins";
}*@
@{
    ViewBag.Title = "Zarządzaj kontami Social Media";
}


<h2>@ViewBag.Title</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                Nie ustawiono konfiguracji dla autoryzacji zewnętrznych serwisów.
            </p>
        </div>
    }
    else
    {
        <div class="row">
            @if (Model.CurrentLogins.Count > 0)
            {
            <div class="col-xs-12 col-sm-6 col-md-6">
                <h4>Zarejestrowane konta Social Media</h4>
                <table class="table">
                    <tbody>
                    @foreach (var account in Model.CurrentLogins)
                    {
                        <tr>
                            <td>
                                @if (account.LoginProvider == "Facebook")
                                {
                                    <a class="btn btn-block btn-social btn-facebook">
                                        <span class="fa fa-facebook"></span> Facebook
                                    </a>
                                }
                                else if (account.LoginProvider == "Google")
                                {
                                    <a class="btn btn-block btn-social btn-google">
                                        <span class="fa fa-google"></span> Google
                                    </a>
                                }
                                else if (account.LoginProvider == "LinkedIn")
                                {
                                    <a class="btn btn-block btn-social btn-linkedin">
                                        <span class="fa fa-linkedin"></span> LinkedIn
                                    </a>
                                }
                            </td>
                            <td>
                                @if (ViewBag.ShowRemoveButton)
                                {
                                    using (Html.BeginForm("RemoveLogin", "Manage"))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div>
                                            @Html.Hidden("loginProvider", account.LoginProvider)
                                            @Html.Hidden("providerKey", account.ProviderKey)
                                            <button type="submit" class="btn btn-danger" title="Usuń połączenie z @account.LoginProvider z twojego konta.">
                                                <span class="glyphicon glyphicon-remove"></span> Usuń
                                            </button>
                                            @*<input type="submit" class="btn btn-default" value="Remove" title="Remove this @account.LoginProvider login from your account" />*@
                                        </div>
                                    }
                                }
                                else
                                {
                                    @: &nbsp;
                                }
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            }
            <div class="col-xs-12 col-sm-6 col-md-6">
                @if (Model.OtherLogins.Count > 0)
                {
                    <h4>Niezarejestrowane konta Social Media</h4>
                    using (Html.BeginForm("LinkLogin", "Manage"))
                    {
                    @Html.AntiForgeryToken()
                    <table class="table">
                        <tbody>
                        @*<div id="socialLoginList">
                                    <p>*@
                        @foreach (AuthenticationDescription p in Model.OtherLogins)
                        {
                            <tr>
                                <td>
                                    @if (p.Caption == "Facebook")
                                    {
                                        <button type="submit" class="btn btn-block btn-social btn-facebook" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Połącz twoje konto z @p.Caption"><span class="fa fa-facebook"></span>Facebook</button>
                                    }
                                    else if (p.Caption == "Google")
                                    {
                                        <button type="submit" class="btn btn-block btn-social btn-google" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Połącz twoje konto z @p.Caption"><span class="fa fa-google"></span>Google</button>
                                    }
                                    else if (p.Caption == "LinkedIn")
                                    {
                                        <button type="submit" class="btn btn-block btn-social btn-linkedin" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Połącz twoje konto z @p.Caption"><span class="fa fa-linkedin"></span>LinkedIn</button>
                                    }
    @*<button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>*@
    </td>
                                <td>
                                    &nbsp;
                                </td>
                            </tr>
                        }
                        @*</p>
                                </div>*@
                        </tbody>
                    </table>
                    }
                }
            </div>
        </div>
    }
}
@*@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        if (Model.CurrentLogins.Count > 0)
        {
            <h4>Registered Logins</h4>
            <table class="table">
                <tbody>
                    @foreach (var account in Model.CurrentLogins)
                    {
                        <tr>
                            <td>@account.LoginProvider</td>
                            <td>
                                @if (ViewBag.ShowRemoveButton)
                                {
                                    using (Html.BeginForm("RemoveLogin", "Manage"))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div>
                                            @Html.Hidden("loginProvider", account.LoginProvider)
                                            @Html.Hidden("providerKey", account.ProviderKey)
                                            <input type="submit" class="btn btn-default" value="Remove" title="Remove this @account.LoginProvider login from your account" />
                                        </div>
                                    }
                                }
                                else
                                {
                                    @: &nbsp;
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        if (Model.OtherLogins.Count > 0)
        {
            using (Html.BeginForm("LinkLogin", "Manage"))
            {
                @Html.AntiForgeryToken()
                <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in Model.OtherLogins)
                    {
                        <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                    }
                </p>
                </div>
            }
        }
    }
}*@
