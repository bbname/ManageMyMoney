@model MMM.ViewModels.TransactionViewModel.TransactionDeleteViewModel

<script type="text/javascript">
    $(document).ready(function () {
        DeleteTransactionListener('@Url.Action("Delete", "Transaction")',
            '@Model.Id',
            '@Model.BankAccountId',
            '@Model.UserId',
            '@Url.Action("GetTransactionsByBankAccountIdFilters", "Transaction")',
            '@Url.Action("UpdateBankAccountBalance", "BankAccount")',
            '@Model.Amount',
            '@Url.Action("UpdateBalanceInNewerTransactions", "Transaction")',
            '@Model.SetDate'
        );
    });
</script>

<div class="modal-content" id="ModalContent">
    <div class="modal-header">
        <button class="close" type="button" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Usuń transakcje</h4>
    </div>
    <div class="modal-body">
        <div class="panel panel-default" id="TransactionToDelete">
            <div class="panel-heading">
                <h4>@Html.DisplayFor(t => t.Name)</h4>
            </div>
            <div class="panel-body">
                <dl class="row h5">
                    <dd class="col-xs-12 col-sm-3">Kwota:</dd>
                    <dt class="col-xs-12 col-sm-9">
                        @if (Model.Amount > 0)
                        {
                            <p style="color: #5cb85c;">+@Html.DisplayFor(t => t.Amount) @Html.DisplayFor(t => t.Currency)</p>
                        }
                        else if (Model.Amount == 0)
                        {
                            <p style="color: #f0ad4e;">@Html.DisplayFor(t => t.Amount) @Html.DisplayFor(t => t.Currency)</p>
                        }
                        else
                        {
                            <p style="color: #d9534f;">@Html.DisplayFor(t => t.Amount) @Html.DisplayFor(t => t.Currency)</p>
                        }
                    </dt>
                    <dd class="col-xs-12 col-sm-3">Saldo:</dd>
                    <dt class="col-xs-12 col-sm-9">
                        @if (Model.AccountBalance > 0)
                        {
                            <p style="color: #5cb85c;">@Html.DisplayFor(t => t.AccountBalance) @Html.DisplayFor(t => t.Currency)</p>
                        }
                        else if (Model.AccountBalance == 0)
                        {
                            <p style="color: #f0ad4e;">@Html.DisplayFor(t => t.AccountBalance) @Html.DisplayFor(t => t.Currency)</p>
                        }
                        else
                        {
                            <p style="color: #d9534f;">@Html.DisplayFor(t => t.AccountBalance) @Html.DisplayFor(t => t.Currency)</p>
                        }
                    </dt>
                    <dd class="col-xs-12 col-sm-3">Data: </dd>
                    <dt class="col-xs-12 col-sm-9">@Html.DisplayFor(t => t.SetDate)</dt>
                </dl>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        @*@using (Html.BeginForm())*@
        @using (Html.BeginForm("Delete", "Transaction", FormMethod.Post, new { role = "form", id = "ModalDeleteTransaction" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-actions no-color">
                <span style="float: left;"><input id="DeleteChangeBankAccountBalance" name="DeleteChangeBankAccountBalance" type="checkbox" class="form-control checkbox-change-account-balance btn-md" /><span> Nie zmieniaj obecnego salda konta oraz transakcji.</span></span>
                <button class="btn btn-danger" type="submit" data-dismiss="modal" id="DeleteTransactionBtn"><span class="glyphicon glyphicon-remove"></span> Usuń</button>
            </div>
        }
    </div>
</div>