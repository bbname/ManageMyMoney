@using System.Web.Configuration
@using Microsoft.AspNet.Identity
@using PagedList.Mvc
@model PagedList.IPagedList<MMM.ViewModels.TransactionViewModel.TransactionListViewModel>
@Scripts.Render("~/bundles/load-transaction-to-modal")
<script type="text/javascript">
    $(document).ready(function() {
        TransactionDeleteOpenModalListener('@Url.Action("Delete", "Transaction")', $bankAccountId);
        TransactionEditOpenModalListener('@Url.Action("Edit", "Transaction")', $bankAccountId, '@User.Identity.GetUserId()');
        TransactionDetailsOpenModalListener('@Url.Action("Details", "Transaction")', $bankAccountId);
        @*PagingListener('@Url.Action("GetTransactionsByBankAccountId", "Transaction")', $bankAccountId);*@
        PagingListener('@Url.Action("GetTransactionsByBankAccountIdFilters", "Transaction")', '@Url.Action("GetTransactionsBySearchNameFilters", "Transaction")' ,$bankAccountId);
    });
</script>

@foreach (var transaction in Model)
{
        <div class="col-xs-6 col-sm-4 col-md-3">
            @Html.Partial("~/Views/Transaction/Transaction.cshtml", transaction)
        </div>
}
<div class="row col-xs-12 col-sm-12 col-md-12" style="z-index: -1;"></div>
<div class="col-xs-12 col-sm-12 col-md-12" id="pagingSystem">
    
    @if (Model.PageCount != 0)
    {
        @Html.PagedListPager(Model, page => Url.Action("GetTransactionsByBankAccountIdFilters", "Transaction",
            new {page}))
        @:Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) z @Model.PageCount
    }

    @*@Html.PagedListPager(Model, page => Url.Action("GetTransactionsByBankAccountIdFilters", "Transaction",
        new {page}))
    Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) z @Model.PageCount*@
</div>
