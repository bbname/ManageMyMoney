@model MMM.ViewModels.TransactionViewModel.TransactionEditViewModel
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(function () {
        LoadAmountValue('@Model.Balance');
        EditLoadValidation();
        EditTransactionListener('@Model.Currency',
            '@Url.Action("Edit", "Transaction")',
            '@Url.Action("GetTransactionsByBankAccountIdFilters", "Transaction")',
            '@Url.Action("GetTransactionsBySearchNameFilters", "Transaction")',
            '@Url.Action("UpdateBankAccountBalance", "BankAccount")',
            '@Model.Balance',
            '@Url.Action("UpdateBalanceInNewerTransactions", "Transaction")'
        );
        EditBalanceControl();
        ChangeEditAccountBalanceListener('@Model.AccountBalance', '@Model.Currency');

        $(function () {
            $("#EditSetDate").datetimepicker({
                showAnim: 'slideDown',
                oneLine: true,
                dateFormat: 'dd.mm.yy',
                controlType: 'select',
                timeFormat: 'HH:mm'
            });
        });
    });
</script>

<div class="modal-content" id="EditModalContent">
    @using (Html.BeginForm("Edit", "Transaction", FormMethod.Post, new { role="form", id="ModalEditTransaction"}))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="modal-header">
                <button class="close" type="button" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Edytuj transakcje</h4>
            </div>
            <div class="modal-body">
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.HiddenFor(model => model.Id)
                <div id="InputsToEdit">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AccountBalance, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input class="form-control" type="text" readonly="readonly" value="@Html.DisplayFor(m => m.AccountBalance) @Html.DisplayFor(m => m.Currency)" id="AccountBalance" name="AccountBalance" />
                            @Html.ValidationMessageFor(model => model.AccountBalance, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SetDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input id="EditSetDate" name="SetDate" type="text" class="form-control" style="cursor: pointer;" value="@Html.DisplayFor(t => t.SetDate)" data-val="true" data-val-required="Pole Data jest wymagane." />
                            @Html.ValidationMessageFor(model => model.SetDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.TextArea("Description", Model.Description, new { @class = "form-control", @placeholder = "Dodaj opis..."})
                    </div>
                </div>
                    @Html.HiddenFor(m => m.BankAccountId)
                    @Html.HiddenFor(m => m.UserId)
                </div>
            <div class="modal-footer">
                <div class="col-md-offset-3 col-md-9" id="ValidationInfo"></div>
                <div class="form-actions no-color">
                    <span style="float: left;"><input id="EditChangeBankAccountBalance" name="EditChangeBankAccountBalance" type="checkbox" class="form-control checkbox-change-account-balance btn-md"/><span> Nie zmieniaj obecnego salda konta i nowszych transakcji.</span></span>
                    <button class="btn btn-warning" type="submit" data-dismiss="modal" id="EditTransactionBtn"><span class="glyphicon glyphicon-ok"></span> Zapisz</button>
                </div>
                @*<div class="form-group">
                    <span style="float: left;"><input id="EditChangeBankAccountBalance" name="EditChangeBankAccountBalance" type="checkbox" class="form-control checkbox-change-account-balance btn-md"/><span> Nie zmieniaj obecnego salda konta.</span></span>
                    <div class="col-md-offset-2 col-md-10" id="ValidationInfo">
                        <button class="btn btn-warning" type="submit" data-dismiss="modal" id="EditTransactionBtn"><span class="glyphicon glyphicon-ok"></span> Zapisz</button>
                    </div>
                </div>*@
            </div>
        </div>
    }
</div>
