@model MMM.ViewModels.TransactionViewModel.TransactionCreateViewModel

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(document).ready(function () {
        LoadValidation();
        AddTransactionListener('@Url.Action("Create", "Transaction")', '@Url.Action("UpdateBankAccountBalance", "BankAccount")', '@Url.Action("GetTransactionsByBankAccountIdFilters", "Transaction")');
        BalanceControl();
        ChangeAccountBalanceListener('@Model.AccountBalance', '@Model.Currency');

        $(function () {
            $("#SetDate").datetimepicker({
                showAnim: 'slideDown',
                oneLine: true,
                dateFormat: 'dd.mm.yy',
                controlType: 'select',
                timeFormat: 'HH:mm'
            });
        });

    });


</script>
<div class="modal-content" id="ModalContent">
    @using (Html.BeginForm("Create", "Transaction", FormMethod.Post, new { role="form", id="ModalCreateTransaction"}))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="modal-header">
                <button class="close" type="button" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Utwórz transakcję</h4>
            </div>
            <div class="modal-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div id="InputsToEdit">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AccountBalance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input class="form-control" type="text" readonly="readonly" value="@Html.DisplayFor(m => m.AccountBalance) @Html.DisplayFor(m => m.Currency)" id="AccountBalance" name="AccountBalance" />
                        @Html.ValidationMessageFor(model => model.AccountBalance, "", new {@class = "text-danger"})
                    </div>
                </div>          

                <div class="form-group">
                    @Html.LabelFor(model => model.SetDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input id="SetDate" name="SetDate" type="text" class="form-control" style="cursor: pointer;" data-val="true" data-val-required="Pole Data jest wymagane." />
                        @Html.ValidationMessageFor(model => model.SetDate, "", new {@class = "text-danger"})
                    </div>
                </div>
                </div>
                @Html.HiddenFor(m => m.BankAccountId)
                @Html.HiddenFor(m => m.UserId)
            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10" id="ValidationInfo">
                        <button class="btn btn-success" type="submit" data-dismiss="modal" id="AddTransactionBtn"><span class="glyphicon glyphicon-plus"></span> Dodaj</button>
                    </div>
                </div>
            </div>
        </div>
    }

</div>
