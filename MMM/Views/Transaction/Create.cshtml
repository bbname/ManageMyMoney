@model MMM.ViewModels.TransactionViewModel.TransactionCreateViewModel
<script type="text/javascript">
    $(document).ready(function () {
        BalanceControl();
        $.validator.unobtrusive.parse("#ModalCreateTransaction");

        //$(function () {
        //    $(".date-picker").datetimepicker({
        //        changeMonth: true,
        //        changeYear: true,
        //        yearRange: "-100:+0",
        //        dateFormat: 'dd-M-yy',
        //        controlType: 'select',
        //        timeFormat: 'hh:mm TT'
        //    });

        //});

        //jQuery.validator.methods.date = function (value, element) {
        //    var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
        //    if (isChrome) {
        //        var d = new Date();
        //        return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
        //    } else {
        //        return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
        //    }
        //};

    });


    function BalanceControl() {
        var balance = $('#Balance');
        var onlyIntsRegExp = new RegExp('^(-?)[0-9]+$');
        balance.change(function () {
            if (onlyIntsRegExp.test(balance.val())) {
                balance.val(balance.val() + ",00");
            }
            else if (balance.val().indexOf('.') !== -1) {
                balance.val(balance.val().replace('.', ','));
            }
            else {
                balance.val();
            }
        });
    }
</script>
<div class="modal-content">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id="ModalCreateTransaction"}))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="modal-header">
                <button class="close" type="button" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Utwórz transakcję</h4>
            </div>
            <div class="modal-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AccountBalance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AccountBalance, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AccountBalance, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SetDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SetDate, new { htmlAttributes = new { Value = Model.SetDate.ToString("dd.MM.yyyy"), @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                        @Html.ValidationMessageFor(model => model.SetDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                                @Html.LabelFor(model => model.Currency, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Currency, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.ValidationMessageFor(model => model.Currency, "", new {@class = "text-danger"})
                                </div>
                            </div>*@
                @Html.HiddenFor(m => m.BankAccountId)
                @Html.HiddenFor(m => m.UserId)
            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn btn-success" type="submit" data-dismiss="modal"><span class="glyphicon glyphicon-plus"></span> Dodaj</button>
                        @*<input type="submit" value="Create" class="btn btn-default"/>*@
                    </div>
                </div>
            </div>
        </div>
    }

</div>
